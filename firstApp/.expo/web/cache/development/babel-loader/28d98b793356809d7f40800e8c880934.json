{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\\\u30B3\\u30FC\\u30C9\\\\ReactNative\\\\firstApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Header from \"./src/components/Header\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoItem = _useState2[0],\n      setTodoItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoList = _useState4[0],\n      setTodoList = _useState4[1];\n\n  var addTodoList = function addTodoList() {\n    setTodoList.apply(void 0, _toConsumableArray(todoList).concat([todoItem]));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, React.createElement(Header, {\n    title: \"Todo List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter todo item\",\n    style: styles.TextInput,\n    onChangeText: function onChangeText(text) {\n      return setTodoItem(text);\n    },\n    value: todoItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }), React.createElement(Button, {\n    title: \"Add Todo\",\n    onPress: addTodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, todoList.map(function (todo) {\n    return React.createElement(View, {\n      key: todo,\n      style: styles.todoItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 68\n      }\n    }, todo));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 30,\n    marginTop: 100\n  },\n  TextInput: {\n    padding: 10,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  todoItem: {\n    marginTop: 10,\n    padding: 20,\n    backgroundColor: '#f2f2f2',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: 'gray'\n  }\n});","map":{"version":3,"sources":["E:/コード/ReactNative/firstApp/App.js"],"names":["StatusBar","React","useState","Header","App","todoItem","setTodoItem","todoList","setTodoList","addTodoList","styles","container","TextInput","text","map","todo","StyleSheet","create","padding","marginTop","borderColor","marginBottom","borderWidth","backgroundColor","borderRadius"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAEA,OAAOC,MAAP;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACGF,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,MACtBG,QADsB;AAAA,MACZC,WADY;;AAAA,mBAEGJ,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAEtBK,QAFsB;AAAA,MAEZC,WAFY;;AAI7B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBD,IAAAA,WAAW,MAAX,4BAAeD,QAAf,UAAwBF,QAAxB;AACA,GAFD;;AAGA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,SAAD;AACC,IAAA,WAAW,EAAC,iBADb;AAEC,IAAA,KAAK,EAAED,MAAM,CAACE,SAFf;AAGC,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIP,WAAW,CAACO,IAAD,CAAf;AAAA,KAHnB;AAIC,IAAA,KAAK,EAAER,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAQC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,UADP;AAEC,IAAA,OAAO,EAAEI,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD,EAcC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECF,QAAQ,CAACO,GAAT,CAAa,UAAAC,IAAI;AAAA,WAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAX;AAAiB,MAAA,KAAK,EAAEL,MAAM,CAACL,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOU,IAAP,CAAzC,CAAJ;AAAA,GAAjB,CAFD,CAdD,CAFD,CADD;AA0BA;AAED,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,SAAS,EAAE;AACVO,IAAAA,OAAO,EAAE,EADC;AAEVC,IAAAA,SAAS,EAAE;AAFD,GADqB;AAMhCP,EAAAA,SAAS,EAAE;AACVM,IAAAA,OAAO,EAAE,EADC;AAEVE,IAAAA,WAAW,EAAE,SAFH;AAGVC,IAAAA,YAAY,EAAE,EAHJ;AAIVC,IAAAA,WAAW,EAAE;AAJH,GANqB;AAahCjB,EAAAA,QAAQ,EAAE;AACTc,IAAAA,SAAS,EAAE,EADF;AAETD,IAAAA,OAAO,EAAE,EAFA;AAGTK,IAAAA,eAAe,EAAC,SAHP;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTF,IAAAA,WAAW,EAAE,CALJ;AAMTF,IAAAA,WAAW,EAAE;AANJ;AAbsB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View,TextInput, Button, ScrollView} from 'react-native';\nimport Header from './src/components/Header';\nexport default function App() {\n\tconst [todoItem, setTodoItem] = useState('');\n\tconst [todoList, setTodoList] = useState([]);\n\n\tconst addTodoList = () => {\n\t\tsetTodoList(...todoList,todoItem);\t\n\t}\n\treturn (\n\t\t<View>\n\t\t\t<Header title=\"Todo List\"/>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View>\n\t\t\t\t\t<StatusBar style=\"auto\" />\n\t\t\t\t\t<TextInput \n\t\t\t\t\t\tplaceholder=\"Enter todo item\" \n\t\t\t\t\t\tstyle={styles.TextInput} \n\t\t\t\t\t\tonChangeText={text => setTodoItem(text)}\n\t\t\t\t\t\tvalue={todoItem}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button \n\t\t\t\t\t\ttitle=\"Add Todo\"\n\t\t\t\t\t\tonPress={addTodoList}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t<ScrollView>\n\n\t\t\t\t{todoList.map(todo => <View key={todo} style={styles.todoItem}><Text>{todo}</Text></View>)}\t\n\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t</View>\n\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 30,\n\t\tmarginTop: 100\n\n\t},\n\tTextInput: {\n\t\tpadding: 10,\n\t\tborderColor: '#000000',\n\t\tmarginBottom: 10,\n\t\tborderWidth: 1\n\n\t},\n\ttodoItem :{\n\t\tmarginTop: 10,\n\t\tpadding: 20,\n\t\tbackgroundColor:'#f2f2f2',\n\t\tborderRadius: 10,\n\t\tborderWidth: 1,\n\t\tborderColor: 'gray',\n\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}